{"ast":null,"code":"import React from 'react';\nimport CHAT_HISTORY from '../data/chat_log.json';\n\n// export function ChatPane(props) {\n//   const currentChannel = props.currentChannel;\n\n//   const handleClick = (event) => {\n//     console.log(\"you clicked me!\");\n//   }\n\n//only show current channel messages and sort by reverse chron order\n// const channelMessage = CHAT_HISTORY.filter((msgObj) => {\n//   return msgObj.channel === currentChannel;\n// }).sort((m1,m2) => m2.timestamp - m1.timestamp)\n\n// const messageItemArray = channelMessage.map((messageObj) => {\n//   const element = (\n//     <MessageItem\n//       messageData={messageObj}\n//       key={messageObj.timestamp}\n//     />\n//   )\n//   return element;\n// })\n\n// // // original\n// return (\n//   <div className=\"scrollable-pane\">\n//     <div className=\"pt-2 my-2\">\n//       {/* testing button */}\n//       <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\n//         Click me!\n//       </button>\n//       <hr/>\n\n//       {/* messages */}\n//       {messageItemArray}\n//     </div>\n//   </div>\n//   )\n// }\n\n//   // Slide 13 - show the button if 'general' is the current channel\n//   return (\n//     <div className=\"scrollable-pane\">\n//       <div className=\"pt-2 my-2\">\n//         {/* testing button */}\n//         {currentChannel === 'general' &&\n//           <div>\n//             <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\n//               Click me!\n//             </button>\n//             <hr />\n//           </div>}\n//         {/* messages */}\n//         {messageItemArray}\n//       </div>\n//     </div>\n//   )\n\n// }\n\n// function MessageItem(props) {\n//   const { userName, userImg, text } = props.messageData;\n//   // const userName = props.messageData.userName;\n//   // const userImg = props.messageData.userImg;\n\n//   const handleClick = (event) => {\n//     console.log(\"you liked \" + userName + \"'s post!\");\n//   }\n\n//   return (\n//     <div className=\"message d-flex mb-3\">\n//       <div className=\"me-2\">\n//         <img src={userImg} alt={userName + \"'s avatar\"} />\n//       </div>\n//       <div className=\"flex-grow-1\">\n//         <p className=\"user-name\">{userName}</p>\n//         <p>{text}</p>\n//         <button className=\"btn like-button\" onClick={handleClick}>\n//           <span className=\"material-icons\" style={{ color: \"grey\" }}>favorite_border</span>\n//         </button>\n//       </div>\n//     </div>\n//   )\n// }\n\n// // Slide 14 and 16 - conditional rendering and initial event handling\n// import React from 'react';\n\n// import CHAT_HISTORY from '../data/chat_log.json';\n\n// export function ChatPane(props) {\n//   const currentChannel = props.currentChannel;\n\n//   //(trying to update count on button)\n//   let currentCount = 0;\n//   const handleClick = (event) => {\n//     currentCount = currentCount + 1;\n//     console.log(\"you clicked me!\", currentCount);\n\n//   }\n\n//   //only show current channel messages\n//   const channelMessages = CHAT_HISTORY.filter((msgObj) => {\n//     return msgObj.channel === currentChannel;\n//   })\n\n//   //IF THERE ARE NO MESSAGES IN THIS CHANNEL, SHOW THIS\n//   if (channelMessages.length === 0) {\n//     return <p>No Chat Messages Yet</p>\n//     // return null;\n//   }\n//   const messageItemArray = channelMessages.map((messageObj) => {\n//     const element = (\n//       <MessageItem\n//         messageData={messageObj}\n//         key={messageObj.timestamp}\n//       />\n//     )\n//     return element;\n//   })\n\n//   return (\n//     <div className=\"scrollable-pane\">\n//       <div className=\"pt-2 my-2\">\n//         {/* testing button */}\n//         {currentChannel === 'general' &&\n//           <div>\n//             <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\n//               Click me: {currentCount}\n//             </button>\n//             <hr />\n//           </div>}\n//         {/* messages */}\n//         {messageItemArray}\n//       </div>\n//     </div>\n//   )\n// }\n\n// function MessageItem(props) {\n//   const { userName, userImg, text } = props.messageData;\n//   // const userName = props.messageData.userName;\n//   // const userImg = props.messageData.userImg;\n\n//   const handleClick = (event) => {\n//     console.log(\"you liked \" + userName + \"'s post!\");\n//   }\n\n//   return (\n//     <div className=\"message d-flex mb-3\">\n//       <div className=\"me-2\">\n//         <img src={userImg} alt={userName + \"'s avatar\"} />\n//       </div>\n//       <div className=\"flex-grow-1\">\n//         <p className=\"user-name\">{userName}</p>\n//         <p>{text}</p>\n//         <button className=\"btn like-button\" onClick={handleClick}>\n//           <span className=\"material-icons\" style={{ color: \"grey\" }}>favorite_border</span>\n//         </button>\n//       </div>\n//     </div>\n//   )\n// }\n\n// // Slide 21 and 22 - Using State Hooks\n// import React, { useState } from 'react';\n// import CHAT_HISTORY from '../data/chat_log.json';\n\n// export function ChatPane(props) {\n\n//   // const stateManagementArray = useState(0); //start out at 0 very first time\n//   // const count = stateManagementArray[0];\n//   // const setCount = stateManagementArray[1];\n//   // console.log(\"stateManagementArray: \", stateManagementArray)\n\n//   // //instead destructure\n//   const [count, setCount] = useState(0);\n\n//   const currentChannel = props.currentChannel;\n\n//   const handleClick = (event) => {\n//     setCount(count + 1);\n//     console.log(\"you clicked me!\", count);\n//   }\n\n//   //only show current channel messages\n//   const channelMessages = CHAT_HISTORY.filter((msgObj) => {\n//     return msgObj.channel === currentChannel;\n//   })\n\n//   //IF THERE ARE NO MESSAGES IN THIS CHANNEL, SHOW THIS\n//   if (channelMessages.length === 0) {\n//     return <p>No Messages Yet</p>\n//   }\n//   const messageItemArray = channelMessages.map((messageObj) => {\n//     const element = (\n//       <MessageItem\n//         messageData={messageObj}\n//         key={messageObj.timestamp}\n//       />\n//     )\n//     return element;\n//   })\n\n//   return (\n//     <div className=\"scrollable-pane\">\n//       <div className=\"pt-2 my-2\">\n//         {/* testing button */}\n//         {currentChannel === 'general' &&\n//           <div>\n//             <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\n//               Click me: {count}\n//             </button>\n//             <hr />\n//           </div>}\n//         {/* messages */}\n//         {messageItemArray}\n//         <TodoListWithError/>\n//       </div>\n//     </div>\n//   )\n// }\n\n// function MessageItem(props) {\n//   const { userName, userImg, text } = props.messageData;\n//   const [isLiked, setIsLiked] = useState(false);\n\n//   const handleClick = (event) => {\n//     console.log(\"you liked \" + userName + \"'s post!\");\n//     setIsLiked(!isLiked);\n//   }\n\n//   let heartColor = 'grey';\n//   if (isLiked) {\n//     heartColor = 'red';\n//   }\n//   return (\n//     <div className=\"message d-flex mb-3\">\n//       <div className=\"me-2\">\n//         <img src={userImg} alt={userName + \"'s avatar\"} />\n//       </div>\n//       <div className=\"flex-grow-1\">\n//         <p className=\"user-name\">{userName}</p>\n//         <p>{text}</p>\n//         <button className=\"btn like-button\" onClick={handleClick}>\n//           <span className=\"material-icons\" style={{ color: heartColor }}>favorite_border</span>\n//         </button>\n//       </div>\n//     </div>\n//   )\n// }\n\n// function TodoListWithError(props) {\n//   //a state value that is an array of objects\n//   const [todos, setTodos] = useState([{ text: 'Learn Hooks' }]);\n\n//   const handleClick = (event) => {\n//     console.log(\"you clicked me\");\n//     todos[0].text = \"Fix bugs\"; //modify the object\n//                                 //but don't make a new one\n//     setTodos(todos) //This won't work! Not \"changing\"\n//   }\n//    console.log(todos);\n\n//   return (\n//     // {todos[0].text}\n//     <p onClick={handleClick}>{todos[0].text}</p>\n//   )\n// }\n\n// // function TodoListWithError(props) {\n// //   //a state value that is an array of objects\n// //   const [todos, setTodos] = useState([{ text: 'Learn Hooks' }]);\n\n// //   const handleClick = (event) => {\n// //         todos[0].text = \"Fix bugs\"; //modify the object\n// //                                 //but don't make a new one\n\n// //     const newTodosArray = [...todos];\n// //     // setTodos(todos) //This won't work! Not \"changing\"\n// //     setTodos(newTodosArray) //setting a copy will work\n// //   }\n// //    console.log(todos);\n\n// //   return (\n// //     // {todos[0].text}\n// //     <p onClick={handleClick}>{todos[0].text}</p>\n// //   )\n// // }\n\n// //Slide 35 (36 and 37) to elevate state to App\n// import React, {useState} from 'react';\n\n// export function ChatPane(props) {\n// // const [chatMessages, setChatMessages] = useState(CHAT_HISTORY);\n//   const currentChannel = props.currentChannel;\n\n//   //only show current channel messages\n//   const channelMessages = props.chatMessages.filter((msgObj) => {\n//     return msgObj.channel === currentChannel;\n//   })\n\n//   const messageItemArray = channelMessages.map((messageObj) => {\n//     const element = (\n//       <MessageItem\n//         messageData={messageObj}\n//         key={messageObj.timestamp}\n//       />\n//     )\n//     return element;\n//   })\n\n// const [count, setCount] = useState(0);\n\n// console.log('calling chatpane')\n\n// const handleClick = (event) => {\n//   console.log(\"you clicked me!\");\n//     setCount(count+1);\n//     console.log(count);\n//     // addMessage(\"Click\");\n// }\n\n// if (channelMessages.length === 0) {\n//   return <p>No Messages Yet</p>\n// }\n\n// return (\n//   <div className=\"scrollable-pane\">\n//     <div className=\"pt-2 my-2\">\n//       {/* testing button */}\n//       <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\n//         Click me: {count}\n//       </button>\n//       <hr />\n\n//       {messageItemArray}\n//     </div>\n//   </div>\n// )\n\n// }\n\n// function MessageItem(props) {\n// const { userName, userImg, text } = props.messageData;\n\n// const [isLiked, setIsLiked ] = useState(false);\n\n// const handleClick = (event) => {\n//   setIsLiked(!isLiked);\n//   console.log(\"you liked \" + userName + \"'s post!\");\n// }\n\n// let heartColor = 'grey';\n// if (isLiked){\n//   heartColor = 'red';\n// }\n\n// return (\n//   <div className=\"message d-flex mb-3\">\n//     <div className=\"me-2\">\n//       <img src={userImg} alt={userName + \"'s avatar\"} />\n//     </div>\n//     <div className=\"flex-grow-1\">\n//       <p className=\"user-name\">{userName}</p>\n//       <p>{text}</p>\n//       <button className=\"btn like-button\" onClick={handleClick}>\n//         <span className=\"material-icons\" style={{ color: heartColor }}>favorite_border</span>\n//       </button>\n//     </div>\n//   </div>\n// )\n// }\n\n// //Post Lecture, add the Channel navigation (elevate state, etc)\n\n// import React, {useState} from 'react';\n\n// export function ChatPane(props) {\n// // const [chatMessages, setChatMessages] = useState(CHAT_HISTORY);\n//   const currentChannel = props.currentChannel;\n\n//   //only show current channel messages\n//   const channelMessages = props.chatMessages.filter((msgObj) => {\n//     return msgObj.channel === currentChannel;\n//   })\n\n//   const messageItemArray = channelMessages.map((messageObj) => {\n//     const element = (\n//       <MessageItem\n//         messageData={messageObj}\n//         key={messageObj.timestamp}\n//       />\n//     )\n//     return element;\n//   })\n\n// const [count, setCount] = useState(0);\n\n// console.log('calling chatpane')\n\n// const handleClick = (event) => {\n//   console.log(\"you clicked me!\");\n//     setCount(count+1);\n//     console.log(count);\n//     // addMessage(\"Click\");\n// }\n\n// if (channelMessages.length === 0) {\n//   return <p>No Messages Yet</p>\n// }\n\n// return (\n//   <div className=\"scrollable-pane\">\n//     <div className=\"pt-2 my-2\">\n//       {/* testing button */}\n//       <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\n//         Click me: {count}\n//       </button>\n//       <hr />\n\n//       {messageItemArray}\n//     </div>\n//   </div>\n// )\n\n// }\n\n// function MessageItem(props) {\n// const { userName, userImg, text } = props.messageData;\n\n// const [isLiked, setIsLiked ] = useState(false);\n\n// const handleClick = (event) => {\n//   setIsLiked(!isLiked);\n//   console.log(\"you liked \" + userName + \"'s post!\");\n// }\n\n// let heartColor = 'grey';\n// if (isLiked){\n//   heartColor = 'red';\n// }\n\n// return (\n//   <div className=\"message d-flex mb-3\">\n//     <div className=\"me-2\">\n//       <img src={userImg} alt={userName + \"'s avatar\"} />\n//     </div>\n//     <div className=\"flex-grow-1\">\n//       <p className=\"user-name\">{userName}</p>\n//       <p>{text}</p>\n//       <button className=\"btn like-button\" onClick={handleClick}>\n//         <span className=\"material-icons\" style={{ color: heartColor }}>favorite_border</span>\n//       </button>\n//     </div>\n//   </div>\n// )\n// }","map":{"version":3,"names":["React","CHAT_HISTORY"],"sources":["C:/Users/bramw/OneDrive/Documents/GitHub/info340/lecture-demos/react-chat-2/src/components/ChatPane.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport CHAT_HISTORY from '../data/chat_log.json';\r\n\r\n// export function ChatPane(props) {\r\n//   const currentChannel = props.currentChannel;\r\n\r\n//   const handleClick = (event) => {\r\n//     console.log(\"you clicked me!\");\r\n//   }\r\n\r\n  //only show current channel messages and sort by reverse chron order\r\n  // const channelMessage = CHAT_HISTORY.filter((msgObj) => {\r\n  //   return msgObj.channel === currentChannel;\r\n  // }).sort((m1,m2) => m2.timestamp - m1.timestamp)\r\n\r\n\r\n  // const messageItemArray = channelMessage.map((messageObj) => {\r\n  //   const element = (\r\n  //     <MessageItem\r\n  //       messageData={messageObj}\r\n  //       key={messageObj.timestamp}\r\n  //     />\r\n  //   )\r\n  //   return element;\r\n  // })\r\n\r\n\r\n  // // // original\r\n  // return (\r\n  //   <div className=\"scrollable-pane\">\r\n  //     <div className=\"pt-2 my-2\">\r\n  //       {/* testing button */}\r\n  //       <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\r\n  //         Click me!\r\n  //       </button>\r\n  //       <hr/>\r\n\r\n  //       {/* messages */}\r\n  //       {messageItemArray}\r\n  //     </div>\r\n  //   </div>\r\n  //   )\r\n  // }\r\n\r\n//   // Slide 13 - show the button if 'general' is the current channel\r\n//   return (\r\n//     <div className=\"scrollable-pane\">\r\n//       <div className=\"pt-2 my-2\">\r\n//         {/* testing button */}\r\n//         {currentChannel === 'general' &&\r\n//           <div>\r\n//             <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\r\n//               Click me!\r\n//             </button>\r\n//             <hr />\r\n//           </div>}\r\n//         {/* messages */}\r\n//         {messageItemArray}\r\n//       </div>\r\n//     </div>\r\n//   )\r\n\r\n// }\r\n\r\n// function MessageItem(props) {\r\n//   const { userName, userImg, text } = props.messageData;\r\n//   // const userName = props.messageData.userName;\r\n//   // const userImg = props.messageData.userImg;\r\n\r\n//   const handleClick = (event) => {\r\n//     console.log(\"you liked \" + userName + \"'s post!\");\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"message d-flex mb-3\">\r\n//       <div className=\"me-2\">\r\n//         <img src={userImg} alt={userName + \"'s avatar\"} />\r\n//       </div>\r\n//       <div className=\"flex-grow-1\">\r\n//         <p className=\"user-name\">{userName}</p>\r\n//         <p>{text}</p>\r\n//         <button className=\"btn like-button\" onClick={handleClick}>\r\n//           <span className=\"material-icons\" style={{ color: \"grey\" }}>favorite_border</span>\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n// // Slide 14 and 16 - conditional rendering and initial event handling\r\n// import React from 'react';\r\n\r\n// import CHAT_HISTORY from '../data/chat_log.json';\r\n\r\n// export function ChatPane(props) {\r\n//   const currentChannel = props.currentChannel;\r\n\r\n//   //(trying to update count on button)\r\n//   let currentCount = 0;\r\n//   const handleClick = (event) => {\r\n//     currentCount = currentCount + 1;\r\n//     console.log(\"you clicked me!\", currentCount);\r\n\r\n//   }\r\n\r\n//   //only show current channel messages\r\n//   const channelMessages = CHAT_HISTORY.filter((msgObj) => {\r\n//     return msgObj.channel === currentChannel;\r\n//   })\r\n\r\n//   //IF THERE ARE NO MESSAGES IN THIS CHANNEL, SHOW THIS\r\n//   if (channelMessages.length === 0) {\r\n//     return <p>No Chat Messages Yet</p>\r\n//     // return null;\r\n//   }\r\n//   const messageItemArray = channelMessages.map((messageObj) => {\r\n//     const element = (\r\n//       <MessageItem\r\n//         messageData={messageObj}\r\n//         key={messageObj.timestamp}\r\n//       />\r\n//     )\r\n//     return element;\r\n//   })\r\n\r\n//   return (\r\n//     <div className=\"scrollable-pane\">\r\n//       <div className=\"pt-2 my-2\">\r\n//         {/* testing button */}\r\n//         {currentChannel === 'general' &&\r\n//           <div>\r\n//             <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\r\n//               Click me: {currentCount}\r\n//             </button>\r\n//             <hr />\r\n//           </div>}\r\n//         {/* messages */}\r\n//         {messageItemArray}\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// function MessageItem(props) {\r\n//   const { userName, userImg, text } = props.messageData;\r\n//   // const userName = props.messageData.userName;\r\n//   // const userImg = props.messageData.userImg;\r\n\r\n//   const handleClick = (event) => {\r\n//     console.log(\"you liked \" + userName + \"'s post!\");\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"message d-flex mb-3\">\r\n//       <div className=\"me-2\">\r\n//         <img src={userImg} alt={userName + \"'s avatar\"} />\r\n//       </div>\r\n//       <div className=\"flex-grow-1\">\r\n//         <p className=\"user-name\">{userName}</p>\r\n//         <p>{text}</p>\r\n//         <button className=\"btn like-button\" onClick={handleClick}>\r\n//           <span className=\"material-icons\" style={{ color: \"grey\" }}>favorite_border</span>\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// // Slide 21 and 22 - Using State Hooks\r\n// import React, { useState } from 'react';\r\n// import CHAT_HISTORY from '../data/chat_log.json';\r\n\r\n// export function ChatPane(props) {\r\n\r\n//   // const stateManagementArray = useState(0); //start out at 0 very first time\r\n//   // const count = stateManagementArray[0];\r\n//   // const setCount = stateManagementArray[1];\r\n//   // console.log(\"stateManagementArray: \", stateManagementArray)\r\n\r\n//   // //instead destructure\r\n//   const [count, setCount] = useState(0);\r\n\r\n\r\n//   const currentChannel = props.currentChannel;\r\n\r\n\r\n//   const handleClick = (event) => {\r\n//     setCount(count + 1);\r\n//     console.log(\"you clicked me!\", count);\r\n//   }\r\n\r\n//   //only show current channel messages\r\n//   const channelMessages = CHAT_HISTORY.filter((msgObj) => {\r\n//     return msgObj.channel === currentChannel;\r\n//   })\r\n\r\n//   //IF THERE ARE NO MESSAGES IN THIS CHANNEL, SHOW THIS\r\n//   if (channelMessages.length === 0) {\r\n//     return <p>No Messages Yet</p>\r\n//   }\r\n//   const messageItemArray = channelMessages.map((messageObj) => {\r\n//     const element = (\r\n//       <MessageItem\r\n//         messageData={messageObj}\r\n//         key={messageObj.timestamp}\r\n//       />\r\n//     )\r\n//     return element;\r\n//   })\r\n\r\n//   return (\r\n//     <div className=\"scrollable-pane\">\r\n//       <div className=\"pt-2 my-2\">\r\n//         {/* testing button */}\r\n//         {currentChannel === 'general' &&\r\n//           <div>\r\n//             <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\r\n//               Click me: {count}\r\n//             </button>\r\n//             <hr />\r\n//           </div>}\r\n//         {/* messages */}\r\n//         {messageItemArray}\r\n//         <TodoListWithError/>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// function MessageItem(props) {\r\n//   const { userName, userImg, text } = props.messageData;\r\n//   const [isLiked, setIsLiked] = useState(false);\r\n\r\n//   const handleClick = (event) => {\r\n//     console.log(\"you liked \" + userName + \"'s post!\");\r\n//     setIsLiked(!isLiked);\r\n//   }\r\n\r\n//   let heartColor = 'grey';\r\n//   if (isLiked) {\r\n//     heartColor = 'red';\r\n//   }\r\n//   return (\r\n//     <div className=\"message d-flex mb-3\">\r\n//       <div className=\"me-2\">\r\n//         <img src={userImg} alt={userName + \"'s avatar\"} />\r\n//       </div>\r\n//       <div className=\"flex-grow-1\">\r\n//         <p className=\"user-name\">{userName}</p>\r\n//         <p>{text}</p>\r\n//         <button className=\"btn like-button\" onClick={handleClick}>\r\n//           <span className=\"material-icons\" style={{ color: heartColor }}>favorite_border</span>\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// function TodoListWithError(props) {\r\n//   //a state value that is an array of objects\r\n//   const [todos, setTodos] = useState([{ text: 'Learn Hooks' }]);\r\n\r\n//   const handleClick = (event) => {\r\n//     console.log(\"you clicked me\");\r\n//     todos[0].text = \"Fix bugs\"; //modify the object\r\n//                                 //but don't make a new one\r\n//     setTodos(todos) //This won't work! Not \"changing\"\r\n//   }\r\n//    console.log(todos);\r\n\r\n//   return (\r\n//     // {todos[0].text}\r\n//     <p onClick={handleClick}>{todos[0].text}</p>\r\n//   )\r\n// }\r\n\r\n// // function TodoListWithError(props) {\r\n// //   //a state value that is an array of objects\r\n// //   const [todos, setTodos] = useState([{ text: 'Learn Hooks' }]);\r\n\r\n// //   const handleClick = (event) => {\r\n// //         todos[0].text = \"Fix bugs\"; //modify the object\r\n// //                                 //but don't make a new one\r\n\r\n// //     const newTodosArray = [...todos];\r\n// //     // setTodos(todos) //This won't work! Not \"changing\"\r\n// //     setTodos(newTodosArray) //setting a copy will work\r\n// //   }\r\n// //    console.log(todos);\r\n\r\n// //   return (\r\n// //     // {todos[0].text}\r\n// //     <p onClick={handleClick}>{todos[0].text}</p>\r\n// //   )\r\n// // }\r\n\r\n// //Slide 35 (36 and 37) to elevate state to App\r\n// import React, {useState} from 'react';\r\n\r\n// export function ChatPane(props) {\r\n// // const [chatMessages, setChatMessages] = useState(CHAT_HISTORY);\r\n//   const currentChannel = props.currentChannel;\r\n\r\n//   //only show current channel messages\r\n//   const channelMessages = props.chatMessages.filter((msgObj) => {\r\n//     return msgObj.channel === currentChannel;\r\n//   })\r\n\r\n//   const messageItemArray = channelMessages.map((messageObj) => {\r\n//     const element = (\r\n//       <MessageItem\r\n//         messageData={messageObj}\r\n//         key={messageObj.timestamp}\r\n//       />\r\n//     )\r\n//     return element;\r\n//   })\r\n\r\n// const [count, setCount] = useState(0);\r\n\r\n// console.log('calling chatpane')\r\n\r\n// const handleClick = (event) => {\r\n//   console.log(\"you clicked me!\");\r\n//     setCount(count+1);\r\n//     console.log(count);\r\n//     // addMessage(\"Click\");\r\n// }\r\n\r\n\r\n// if (channelMessages.length === 0) {\r\n//   return <p>No Messages Yet</p>\r\n// }\r\n\r\n// return (\r\n//   <div className=\"scrollable-pane\">\r\n//     <div className=\"pt-2 my-2\">\r\n//       {/* testing button */}\r\n//       <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\r\n//         Click me: {count}\r\n//       </button>\r\n//       <hr />\r\n\r\n//       {messageItemArray}\r\n//     </div>\r\n//   </div>\r\n// )\r\n\r\n// }\r\n\r\n// function MessageItem(props) {\r\n// const { userName, userImg, text } = props.messageData;\r\n\r\n// const [isLiked, setIsLiked ] = useState(false);\r\n\r\n// const handleClick = (event) => {\r\n//   setIsLiked(!isLiked);\r\n//   console.log(\"you liked \" + userName + \"'s post!\");\r\n// }\r\n\r\n// let heartColor = 'grey';\r\n// if (isLiked){\r\n//   heartColor = 'red';\r\n// }\r\n\r\n// return (\r\n//   <div className=\"message d-flex mb-3\">\r\n//     <div className=\"me-2\">\r\n//       <img src={userImg} alt={userName + \"'s avatar\"} />\r\n//     </div>\r\n//     <div className=\"flex-grow-1\">\r\n//       <p className=\"user-name\">{userName}</p>\r\n//       <p>{text}</p>\r\n//       <button className=\"btn like-button\" onClick={handleClick}>\r\n//         <span className=\"material-icons\" style={{ color: heartColor }}>favorite_border</span>\r\n//       </button>\r\n//     </div>\r\n//   </div>\r\n// )\r\n// }\r\n\r\n// //Post Lecture, add the Channel navigation (elevate state, etc)\r\n\r\n// import React, {useState} from 'react';\r\n\r\n// export function ChatPane(props) {\r\n// // const [chatMessages, setChatMessages] = useState(CHAT_HISTORY);\r\n//   const currentChannel = props.currentChannel;\r\n\r\n//   //only show current channel messages\r\n//   const channelMessages = props.chatMessages.filter((msgObj) => {\r\n//     return msgObj.channel === currentChannel;\r\n//   })\r\n\r\n//   const messageItemArray = channelMessages.map((messageObj) => {\r\n//     const element = (\r\n//       <MessageItem\r\n//         messageData={messageObj}\r\n//         key={messageObj.timestamp}\r\n//       />\r\n//     )\r\n//     return element;\r\n//   })\r\n\r\n// const [count, setCount] = useState(0);\r\n\r\n// console.log('calling chatpane')\r\n\r\n// const handleClick = (event) => {\r\n//   console.log(\"you clicked me!\");\r\n//     setCount(count+1);\r\n//     console.log(count);\r\n//     // addMessage(\"Click\");\r\n// }\r\n\r\n\r\n// if (channelMessages.length === 0) {\r\n//   return <p>No Messages Yet</p>\r\n// }\r\n\r\n// return (\r\n//   <div className=\"scrollable-pane\">\r\n//     <div className=\"pt-2 my-2\">\r\n//       {/* testing button */}\r\n//       <button className=\"btn btn-outline-primary mb-3\" onClick={handleClick}>\r\n//         Click me: {count}\r\n//       </button>\r\n//       <hr />\r\n\r\n//       {messageItemArray}\r\n//     </div>\r\n//   </div>\r\n// )\r\n\r\n// }\r\n\r\n// function MessageItem(props) {\r\n// const { userName, userImg, text } = props.messageData;\r\n\r\n// const [isLiked, setIsLiked ] = useState(false);\r\n\r\n// const handleClick = (event) => {\r\n//   setIsLiked(!isLiked);\r\n//   console.log(\"you liked \" + userName + \"'s post!\");\r\n// }\r\n\r\n// let heartColor = 'grey';\r\n// if (isLiked){\r\n//   heartColor = 'red';\r\n// }\r\n\r\n// return (\r\n//   <div className=\"message d-flex mb-3\">\r\n//     <div className=\"me-2\">\r\n//       <img src={userImg} alt={userName + \"'s avatar\"} />\r\n//     </div>\r\n//     <div className=\"flex-grow-1\">\r\n//       <p className=\"user-name\">{userName}</p>\r\n//       <p>{text}</p>\r\n//       <button className=\"btn like-button\" onClick={handleClick}>\r\n//         <span className=\"material-icons\" style={{ color: heartColor }}>favorite_border</span>\r\n//       </button>\r\n//     </div>\r\n//   </div>\r\n// )\r\n// }"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,YAAY,MAAM,uBAAuB;;AAEhD;AACA;;AAEA;AACA;AACA;;AAEE;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}