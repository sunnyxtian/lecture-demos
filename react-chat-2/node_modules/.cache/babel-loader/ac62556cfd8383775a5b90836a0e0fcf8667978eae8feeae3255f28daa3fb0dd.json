{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bramw\\\\OneDrive\\\\Documents\\\\GitHub\\\\info340\\\\lecture-demos\\\\react-chat-2\\\\src\\\\components\\\\App.js\";\nimport React from 'react';\nimport { HeaderBar } from './HeaderBar.js';\nimport { ChannelList } from './ChannelNav.js';\nimport { ChatPane } from './ChatPane.js';\nimport { ComposeForm } from './ComposeForm';\n\n//A component!\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App(props) {\n  const channelList = ['general', 'random', 'dank-memes', 'channel-4', 'pet-pictures'];\n  const currentChannel = \"general\";\n\n  //what content should my App look like?\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row flex-grow-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ChannelList, {\n          channels: channelList,\n          currentChannel: currentChannel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(ChatPane, {\n          currentChannel: currentChannel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ComposeForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n// //Slide 35 (36 and 37) - Elevate the Messages up to the App so both the ChatPand and the ComposeForm have access\n// import React, { useState } from 'react';\n\n// import { HeaderBar } from './HeaderBar.js';\n// import { ChannelList } from './ChannelNav.js';\n// import { ChatPane } from './ChatPane.js';\n// import { ComposeForm } from './ComposeForm';\n// import CHAT_HISTORY from '../data/chat_log.json';\n\n// export default function App(props) {\n\n//   const [chatMessages, setChatMessages] = useState(CHAT_HISTORY);\n\n//   const addMessage = (text) => {\n//     const newMessage = {\n//       \"userId\": \"penguin\",\n//       \"userName\": \"Penguin\",\n//       \"userImg\": \"/img/Penguin.png\",\n//       \"text\": text,\n//       \"timestamp\": Date.now(),\n//       \"channel\": \"general\"\n//     }\n//     const updateChatMessages = [...chatMessages, newMessage];\n//     setChatMessages(updateChatMessages);\n//   }\n\n//   const channelList = [\n//     'general', 'random', 'dank-memes', 'channel-4', 'pet-pictures'\n//   ]\n//   const currentChannel = \"general\";\n\n//   //what content should my App look like?\n//   return (\n//     <div className=\"container-fluid d-flex flex-column\">\n//       <HeaderBar />\n//       <div className=\"row flex-grow-1\">\n//         <div className=\"col-3\">\n//           <ChannelList channels={channelList} currentChannel={currentChannel} />\n//         </div>\n//         <div className=\"col d-flex flex-column\">\n//           <ChatPane\n//             currentChannel={currentChannel}\n//             chatMessages={chatMessages} />\n//           <ComposeForm\n//           addMessageCallback={addMessage}/>\n_c = App;\n{/**  */}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n//Post Lecture, add the Channel navigation (elevate state, etc)\n\n// import React, { useState } from 'react';\n\n// import { HeaderBar } from './HeaderBar.js';\n// import { ChannelList } from './ChannelNav.js';\n// import { ChatPane } from './ChatPane.js';\n// import { ComposeForm } from './ComposeForm';\n// import CHAT_HISTORY from '../data/chat_log.json';\n\n// export default function App(props) {\n\n//   const [chatMessages, setChatMessages] = useState(CHAT_HISTORY);\n//   const [currentChannel, setCurrentChannel] = useState('general');\n\n//   const addMessage = (text) => {\n//     const newMessage = {\n//       \"userId\": \"penguin\",\n//       \"userName\": \"Penguin\",\n//       \"userImg\": \"/img/Penguin.png\",\n//       \"text\": text,\n//       \"timestamp\": Date.now(),\n//       \"channel\": \"general\"\n//     }\n//     const updateChatMessages = [...chatMessages, newMessage];\n//     setChatMessages(updateChatMessages);\n//   }\n\n//   const changeChannel = (newChannel) => {\n//     setCurrentChannel(newChannel);\n//   }\n\n//   const channelList = [\n//     'general', 'random', 'dank-memes', 'channel-4', 'pet-pictures'\n//   ]\n//   // const currentChannel = \"general\";\n\n//   return (\n//     <div className=\"container-fluid d-flex flex-column\">\n//       <HeaderBar />\n//       <div className=\"row flex-grow-1\">\n//         <div className=\"col-3\">\n//           <ChannelList channels={channelList} currentChannel={currentChannel} howToChangeTheChannel={changeChannel} />\n//         </div>\n//         <div className=\"col d-flex flex-column\">\n//           <ChatPane\n//             currentChannel={currentChannel}\n//             chatMessages={chatMessages} />\n//           <ComposeForm\n//           addMessageCallback={addMessage}/>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","HeaderBar","ChannelList","ChatPane","ComposeForm","jsxDEV","_jsxDEV","App","props","channelList","currentChannel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","channels","_c","$RefreshReg$"],"sources":["C:/Users/bramw/OneDrive/Documents/GitHub/info340/lecture-demos/react-chat-2/src/components/App.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport { HeaderBar } from './HeaderBar.js';\r\nimport { ChannelList } from './ChannelNav.js';\r\nimport { ChatPane } from './ChatPane.js';\r\nimport { ComposeForm } from './ComposeForm';\r\n\r\n//A component!\r\nexport default function App(props) {\r\n\r\n  const channelList = [\r\n    'general', 'random', 'dank-memes', 'channel-4', 'pet-pictures'\r\n  ]\r\n  const currentChannel = \"general\";\r\n\r\n  //what content should my App look like?\r\n  return (\r\n    <div className=\"container-fluid d-flex flex-column\">\r\n      <HeaderBar />\r\n      <div className=\"row flex-grow-1\">\r\n        <div className=\"col-3\">\r\n          <ChannelList channels={channelList} currentChannel={currentChannel} />\r\n        </div>\r\n        <div className=\"col d-flex flex-column\">\r\n          <ChatPane currentChannel={currentChannel} />\r\n          <ComposeForm />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// //Slide 35 (36 and 37) - Elevate the Messages up to the App so both the ChatPand and the ComposeForm have access\r\n// import React, { useState } from 'react';\r\n\r\n// import { HeaderBar } from './HeaderBar.js';\r\n// import { ChannelList } from './ChannelNav.js';\r\n// import { ChatPane } from './ChatPane.js';\r\n// import { ComposeForm } from './ComposeForm';\r\n// import CHAT_HISTORY from '../data/chat_log.json';\r\n\r\n// export default function App(props) {\r\n\r\n//   const [chatMessages, setChatMessages] = useState(CHAT_HISTORY);\r\n\r\n//   const addMessage = (text) => {\r\n//     const newMessage = {\r\n//       \"userId\": \"penguin\",\r\n//       \"userName\": \"Penguin\",\r\n//       \"userImg\": \"/img/Penguin.png\",\r\n//       \"text\": text,\r\n//       \"timestamp\": Date.now(),\r\n//       \"channel\": \"general\"\r\n//     }\r\n//     const updateChatMessages = [...chatMessages, newMessage];\r\n//     setChatMessages(updateChatMessages);\r\n//   }\r\n\r\n\r\n//   const channelList = [\r\n//     'general', 'random', 'dank-memes', 'channel-4', 'pet-pictures'\r\n//   ]\r\n//   const currentChannel = \"general\";\r\n\r\n//   //what content should my App look like?\r\n//   return (\r\n//     <div className=\"container-fluid d-flex flex-column\">\r\n//       <HeaderBar />\r\n//       <div className=\"row flex-grow-1\">\r\n//         <div className=\"col-3\">\r\n//           <ChannelList channels={channelList} currentChannel={currentChannel} />\r\n//         </div>\r\n//         <div className=\"col d-flex flex-column\">\r\n//           <ChatPane\r\n//             currentChannel={currentChannel}\r\n//             chatMessages={chatMessages} />\r\n//           <ComposeForm\r\n//           addMessageCallback={addMessage}/>\r\n        {/**  */}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n//Post Lecture, add the Channel navigation (elevate state, etc)\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// import { HeaderBar } from './HeaderBar.js';\r\n// import { ChannelList } from './ChannelNav.js';\r\n// import { ChatPane } from './ChatPane.js';\r\n// import { ComposeForm } from './ComposeForm';\r\n// import CHAT_HISTORY from '../data/chat_log.json';\r\n\r\n// export default function App(props) {\r\n\r\n//   const [chatMessages, setChatMessages] = useState(CHAT_HISTORY);\r\n//   const [currentChannel, setCurrentChannel] = useState('general');\r\n\r\n//   const addMessage = (text) => {\r\n//     const newMessage = {\r\n//       \"userId\": \"penguin\",\r\n//       \"userName\": \"Penguin\",\r\n//       \"userImg\": \"/img/Penguin.png\",\r\n//       \"text\": text,\r\n//       \"timestamp\": Date.now(),\r\n//       \"channel\": \"general\"\r\n//     }\r\n//     const updateChatMessages = [...chatMessages, newMessage];\r\n//     setChatMessages(updateChatMessages);\r\n//   }\r\n\r\n//   const changeChannel = (newChannel) => {\r\n//     setCurrentChannel(newChannel);\r\n//   }\r\n\r\n\r\n//   const channelList = [\r\n//     'general', 'random', 'dank-memes', 'channel-4', 'pet-pictures'\r\n//   ]\r\n//   // const currentChannel = \"general\";\r\n\r\n\r\n//   return (\r\n//     <div className=\"container-fluid d-flex flex-column\">\r\n//       <HeaderBar />\r\n//       <div className=\"row flex-grow-1\">\r\n//         <div className=\"col-3\">\r\n//           <ChannelList channels={channelList} currentChannel={currentChannel} howToChangeTheChannel={changeChannel} />\r\n//         </div>\r\n//         <div className=\"col d-flex flex-column\">\r\n//           <ChatPane\r\n//             currentChannel={currentChannel}\r\n//             chatMessages={chatMessages} />\r\n//           <ComposeForm\r\n//           addMessageCallback={addMessage}/>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,WAAW,QAAQ,eAAe;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,GAAGA,CAACC,KAAK,EAAE;EAEjC,MAAMC,WAAW,GAAG,CAClB,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,cAAc,CAC/D;EACD,MAAMC,cAAc,GAAG,SAAS;;EAEhC;EACA,oBACEJ,OAAA;IAAKK,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBACjDN,OAAA,CAACL,SAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbV,OAAA;MAAKK,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BN,OAAA;QAAKK,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBN,OAAA,CAACJ,WAAW;UAACe,QAAQ,EAAER,WAAY;UAACC,cAAc,EAAEA;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eACNV,OAAA;QAAKK,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCN,OAAA,CAACH,QAAQ;UAACO,cAAc,EAAEA;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5CV,OAAA,CAACF,WAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAE,EAAA,GArEwBX,GAAG;AAsEnB,CAAC;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}